<?xml version="1.0" encoding="UTF-8" ?>
<class name="Semaphore" inherits="Reference" version="4.0">
	<brief_description>
		A synchronization semaphore.
	</brief_description>
	<description>
		A synchronization semaphore which can be used to synchronize multiple [Thread]s. Initialized to zero on creation. Be careful to avoid deadlocks. For a binary version, see [Mutex].
	</description>
	<tutorials>
		<link title="Using multiple threads">https://docs.godotengine.org/en/latest/tutorials/threads/using_multiple_threads.html</link>
	</tutorials>
	<methods>
		<method name="post">
			<return type="void">
			</return>
			<description>
				Lowers the [Semaphore], allowing one more thread in.
			</description>
		</method>
		<method name="try_wait">
			<return type="int" enum="Error">
			</return>
			<description>
				Like [method wait], but won't block, so if the value is zero, fails immediately and returns [constant ERR_BUSY]. If non-zero, it returns [constant OK] to report success.
			</description>
		</method>
		<method name="wait">
			<return type="void">
			</return>
			<description>
				Waits for the [Semaphore], if its value is zero, blocks until non-zero.
			</description>
		</method>
	</methods>
	<constants>
	</constants>
</class>
